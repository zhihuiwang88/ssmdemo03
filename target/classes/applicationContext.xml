<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"  >

	<!--Spring的配置文件 -->



	<!--自动扫描包 -->
	<context:component-scan base-package="com.huawei">
		<!--除了控制器不扫描外 其它全部扫描 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--2、 c3p0数据源 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />

	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 3、=======配置和mybatis的整合====== -->
	<!-- 3.1配置SQLSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="pooledDataSource" />
		<!-- 3.2 指定mybatis ,mapper文件的位置 -->
		 <property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

<!-- 执行批量的SQLSession -->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
<constructor-arg name="sqlSessionFactory"  ref="sqlSessionFactory" />
<constructor-arg  name="executorType"  value="BATCH"  />
</bean>

	<!--4、=====配置扫描器，将mybatis的接口实现加入到IOC容器中 ===== -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 4.1 扫描所以dao接口的实现，加入到IOC容器中 -->
		<property name="basePackage" value="com.huawei.crud.dao" />
	</bean>

	<!-- 5 事务控制配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 5.1 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource" />
	</bean>
	<!-- 5.2 开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式） -->
	<aop:config>
		<!-- 5.3 切入点表达式 -->
		<aop:pointcut expression="execution(* com.huawei.crud.service..*(..))"
			id="txPoint" />
		<!-- 5.4 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!-- 5.5 配置事务增强 ，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 5.5.1 所以方法都是事务方法 -->
			<tx:method name="*" />
			<!-- 5.5.2 以get开始的所以方法 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>